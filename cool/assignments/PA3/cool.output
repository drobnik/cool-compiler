Nieużywane symbole terminalne w gramatyce

   ELSE
   FI
   IF
   IN
   LET
   LOOP
   POOL
   THEN
   WHILE
   CASE
   ESAC
   OF
   DARROW
   NEW
   ISVOID
   STR_CONST
   INT_CONST
   BOOL_CONST
   OBJECTID
   ASSIGN
   NOT
   LE
   ERROR


Gramatyka

    0 $accept: program $end

    1 program: class_list

    2 class_list: class
    3           | class_list class

    4 class: CLASS TYPEID '{' dummy_feature_list '}' ';'
    5      | CLASS TYPEID INHERITS TYPEID '{' dummy_feature_list '}' ';'

    6 dummy_feature_list: %empty


Symbole terminalne i reguły, w których występują

$end (0) 0
';' (59) 4 5
'{' (123) 4 5
'}' (125) 4 5
error (256)
CLASS (258) 4 5
ELSE (259)
FI (260)
IF (261)
IN (262)
INHERITS (263) 5
LET (264)
LOOP (265)
POOL (266)
THEN (267)
WHILE (268)
CASE (269)
ESAC (270)
OF (271)
DARROW (272)
NEW (273)
ISVOID (274)
STR_CONST (275)
INT_CONST (276)
BOOL_CONST (277)
TYPEID (278) 4 5
OBJECTID (279)
ASSIGN (280)
NOT (281)
LE (282)
ERROR (283)


Symbole nieterminalne i reguły, w których występują

$accept (32)
    po lewej: 0
program (33)
    po lewej: 1, po prawej: 0
class_list (34)
    po lewej: 2 3, po prawej: 1 3
class (35)
    po lewej: 4 5, po prawej: 2 3
dummy_feature_list (36)
    po lewej: 6, po prawej: 4 5


Stan 0

    0 $accept: . program $end

    CLASS  przesunięcie, i przejście do stanu 1

    program     przejście do stanu 2
    class_list  przejście do stanu 3
    class       przejście do stanu 4


Stan 1

    4 class: CLASS . TYPEID '{' dummy_feature_list '}' ';'
    5      | CLASS . TYPEID INHERITS TYPEID '{' dummy_feature_list '}' ';'

    TYPEID  przesunięcie, i przejście do stanu 5


Stan 2

    0 $accept: program . $end

    $end  przesunięcie, i przejście do stanu 6


Stan 3

    1 program: class_list .
    3 class_list: class_list . class

    CLASS  przesunięcie, i przejście do stanu 1

    $domyślnie  redukcja przy użyciu reguły 1 (program)

    class  przejście do stanu 7


Stan 4

    2 class_list: class .

    $domyślnie  redukcja przy użyciu reguły 2 (class_list)


Stan 5

    4 class: CLASS TYPEID . '{' dummy_feature_list '}' ';'
    5      | CLASS TYPEID . INHERITS TYPEID '{' dummy_feature_list '}' ';'

    INHERITS  przesunięcie, i przejście do stanu 8
    '{'       przesunięcie, i przejście do stanu 9


Stan 6

    0 $accept: program $end .

    $domyślnie  akceptowanie


Stan 7

    3 class_list: class_list class .

    $domyślnie  redukcja przy użyciu reguły 3 (class_list)


Stan 8

    5 class: CLASS TYPEID INHERITS . TYPEID '{' dummy_feature_list '}' ';'

    TYPEID  przesunięcie, i przejście do stanu 10


Stan 9

    4 class: CLASS TYPEID '{' . dummy_feature_list '}' ';'

    $domyślnie  redukcja przy użyciu reguły 6 (dummy_feature_list)

    dummy_feature_list  przejście do stanu 11


Stan 10

    5 class: CLASS TYPEID INHERITS TYPEID . '{' dummy_feature_list '}' ';'

    '{'  przesunięcie, i przejście do stanu 12


Stan 11

    4 class: CLASS TYPEID '{' dummy_feature_list . '}' ';'

    '}'  przesunięcie, i przejście do stanu 13


Stan 12

    5 class: CLASS TYPEID INHERITS TYPEID '{' . dummy_feature_list '}' ';'

    $domyślnie  redukcja przy użyciu reguły 6 (dummy_feature_list)

    dummy_feature_list  przejście do stanu 14


Stan 13

    4 class: CLASS TYPEID '{' dummy_feature_list '}' . ';'

    ';'  przesunięcie, i przejście do stanu 15


Stan 14

    5 class: CLASS TYPEID INHERITS TYPEID '{' dummy_feature_list . '}' ';'

    '}'  przesunięcie, i przejście do stanu 16


Stan 15

    4 class: CLASS TYPEID '{' dummy_feature_list '}' ';' .

    $domyślnie  redukcja przy użyciu reguły 4 (class)


Stan 16

    5 class: CLASS TYPEID INHERITS TYPEID '{' dummy_feature_list '}' . ';'

    ';'  przesunięcie, i przejście do stanu 17


Stan 17

    5 class: CLASS TYPEID INHERITS TYPEID '{' dummy_feature_list '}' ';' .

    $domyślnie  redukcja przy użyciu reguły 5 (class)
